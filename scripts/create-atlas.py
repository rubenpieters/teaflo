import os
import json

# https://stackoverflow.com/a/17548459
def inplace_change(filename, old_string, new_string):
    # Safely read the input filename using 'with'
    with open(filename) as f:
        s = f.read()
        if old_string not in s:
            print(f"\"{old_string}\" not found in {filename}.")
            return

    # Safely write the changed content, if found in the file
    with open(filename, 'w') as f:
        print (f"Changing \"{old_string}\" to \"{new_string}\" in {filename}")
        s = s.replace(old_string, new_string)
        f.write(s)

def gen_ts(atlas):
  with open(f"assets/{atlas}.json") as f:
    s = f.read()

  s = json.loads(s)
  type_name = atlas.capitalize()
  content = json.dumps(s["sprites"], indent=4)
  type_decl = f"export type {type_name} = {content}"
  const_decl = f"export const {atlas}: {type_name} = {content}"
  
  ts_file = f"src/app/data/gen/{atlas}.ts"
  os.system(f"touch {ts_file}")
  with open(ts_file, 'w') as f:
    f.write(f"// Automatically generated by create-atlas.py, do not edit\n\n{type_decl}\n\n{const_decl}")

def adapt_format(atlas):
  filename = f"assets/{atlas}.json"
  with open(filename) as f:
    s = f.read()
  
  s = json.loads(s)

  frames = ""
  for sprite in s["sprites"]:
    frame_field = json.dumps(s["sprites"][sprite]).replace("width", "w").replace("height", "h")
    x = f'"{sprite}": ' + '{' + f'"frame":{frame_field}' + '}'
    if frames:
      frames = f"{frames},{x}"
    else:
      frames = x

  new_s = '{' + f'"frames":' + '{' + f'{frames}' + '}' + '}'

  with open(filename, 'w') as f:
    f.write(new_s)

atlas_names = ["atlas1"]

for atlas in atlas_names:
  # run texpack
  print(f"texpack for atlas {atlas}")
  os.system(f"texpack --output assets/{atlas} --POT scripts/{atlas}.txt")

  # prettify texture names
  print(f"prettify texture names for atlas {atlas}")
  inplace_change(f"assets/{atlas}.json", "textures/", "")

  # create generated ts file
  print(f"creating .ts file for atlas {atlas}")
  gen_ts(atlas)

  # adapt json format
  print(f"adapting json format for atlas {atlas}")
  adapt_format(atlas)
